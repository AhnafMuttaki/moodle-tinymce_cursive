{"version":3,"file":"key_logger.min.js","sources":["../src/key_logger.js"],"sourcesContent":["\n/**\n * @module     tiny_cursive/plugin\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\ndefine([\"jquery\", \"core/ajax\", \"core/str\", \"core/templates\"], function (\n  $,\n  AJAX,\n  str,\n  templates,\n) {\n  var usersTable = {\n    init: function (page) {\n      str\n        .get_strings([\n          { key: \"field_require\", component: \"tiny_cursive\" },\n          { key: \"quiz_attempt\", component: \"tiny_cursive\" },\n          { key: \"valid_time\", component: \"tiny_cursive\" },\n        ])\n        .done(function (s) {\n          window.console.log(s);\n          $(document).ready(function($) {\n            $(\".popup_item\").on('click',function () {\n              var mid=$(this).data(\"id\");\n            $(\"#\"+mid).show();\n            });\n            $(\".modal-close \").on('click',function () {$(\".modal\").hide();});\n        } );\n          usersTable.getusers(page);\n        });\n    },\n\n    getusers: function (page) {\n      $(\"#fgroup_id_buttonar\").hide();\n      $(\"#id_coursename\").change(function () {\n        var courseid = $(this).val();\n        var promise1 = AJAX.call([\n          {\n            methodname: \"cursive_get_user_list\",\n            args: {\n              courseid: courseid,\n            },\n          },\n        ]);\n        promise1[0].done(function (json) {\n          var data = JSON.parse(json);\n          var context = {\n            tabledata: data,\n            page: page,\n          };\n          templates\n            .render(\"tiny_cursive/user_list\", context)\n            .then(function (html, js) {\n              window.console.log(js);\n              var filtered_user = $(\"#id_username\");\n\n              filtered_user.html(html);\n            });\n        });\n\n        var promise2 = AJAX.call([\n          {\n            methodname: \"cursive_get_module_list\",\n            args: {\n              courseid: courseid,\n            },\n          },\n        ]);\n        promise2[0].done(function (json) {\n          var data = JSON.parse(json);\n          var context = {\n            tabledata: data,\n            page: page,\n          };\n          templates\n            .render(\"tiny_cursive/user_list\", context)\n            .then(function (html, js) {\n              window.console.log(js);\n              var filtered_user = $(\"#id_modulename\");\n\n              filtered_user.html(html);\n            });\n        });\n      });\n    },\n  };\n  return usersTable;\n});\n"],"names":["define","$","AJAX","str","templates","usersTable","init","page","get_strings","key","component","done","s","window","console","log","document","ready","on","mid","this","data","show","hide","getusers","change","courseid","val","call","methodname","args","json","context","tabledata","JSON","parse","render","then","html","js"],"mappings":"AAQAA,iCAAO,CAAC,SAAU,YAAa,WAAY,mBAAmB,SAC5DC,EACAC,KACAC,IACAC,eAEIC,WAAa,CACfC,KAAM,SAAUC,MACdJ,IACGK,YAAY,CACX,CAAEC,IAAK,gBAAiBC,UAAW,gBACnC,CAAED,IAAK,eAAgBC,UAAW,gBAClC,CAAED,IAAK,aAAcC,UAAW,kBAEjCC,MAAK,SAAUC,GACdC,OAAOC,QAAQC,IAAIH,GACnBX,EAAEe,UAAUC,OAAM,SAAShB,GACzBA,EAAE,eAAeiB,GAAG,SAAQ,eACtBC,IAAIlB,EAAEmB,MAAMC,KAAK,MACvBpB,EAAE,IAAIkB,KAAKG,UAEXrB,EAAE,iBAAiBiB,GAAG,SAAQ,WAAajB,EAAE,UAAUsB,aAEzDlB,WAAWmB,SAASjB,UAI1BiB,SAAU,SAAUjB,MAClBN,EAAE,uBAAuBsB,OACzBtB,EAAE,kBAAkBwB,QAAO,eACrBC,SAAWzB,EAAEmB,MAAMO,MACRzB,KAAK0B,KAAK,CACvB,CACEC,WAAY,wBACZC,KAAM,CACJJ,SAAUA,aAIP,GAAGf,MAAK,SAAUoB,UAErBC,QAAU,CACZC,UAFSC,KAAKC,MAAMJ,MAGpBxB,KAAMA,MAERH,UACGgC,OAAO,yBAA0BJ,SACjCK,MAAK,SAAUC,KAAMC,IACpB1B,OAAOC,QAAQC,IAAIwB,IACCtC,EAAE,gBAERqC,KAAKA,YAIVpC,KAAK0B,KAAK,CACvB,CACEC,WAAY,0BACZC,KAAM,CACJJ,SAAUA,aAIP,GAAGf,MAAK,SAAUoB,UAErBC,QAAU,CACZC,UAFSC,KAAKC,MAAMJ,MAGpBxB,KAAMA,MAERH,UACGgC,OAAO,yBAA0BJ,SACjCK,MAAK,SAAUC,KAAMC,IACpB1B,OAAOC,QAAQC,IAAIwB,IACCtC,EAAE,kBAERqC,KAAKA,wBAMxBjC"}