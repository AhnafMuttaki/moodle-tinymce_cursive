{"version":3,"file":"show_url_in_quiz_detail.min.js","sources":["../src/show_url_in_quiz_detail.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/show_url_in_quiz_detail\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\ndefine([\"jquery\", \"core/ajax\", \"core/str\", \"core/templates\", \"./replay\", \"./analytic_button\", \"./analytic_events\"], function (\n    $,\n    AJAX,\n    str,\n    templates,\n    Replay,\n    analyticButton,\n    AnalyticEvents\n) {\n    const replayInstances = {};\n\n    window.video_playback = function (mid, filepath, questionid) {\n        if (filepath !== '') {\n            const replay = new Replay(\n                elementId = 'content' + mid,\n                filePath = filepath,\n                speed = 10,\n                loop = false,\n                controllerId = 'player_' + mid+questionid\n            );\n            replayInstances[mid] = replay;\n        } else {\n            templates.render('tiny_cursive/no_submission').then(html => {\n                $('#content' + mid).html(html);\n            }).catch(e => window.console.error(e));\n        }\n        return false;\n    };\n\n    var usersTable = {\n        init: function (score_setting, showcomment) {\n            str\n                .get_strings([\n                    { key: \"field_require\", component: \"tiny_cursive\" },\n                ])\n                .done(function () {\n                    usersTable.appendSubmissionDetail(score_setting, showcomment);\n                });\n        },\n        appendSubmissionDetail: function (score_setting, showcomment) {\n            let sub_url = window.location.href;\n            let parm = new URL(sub_url);\n            let attempt_id = parm.searchParams.get('attempt');\n\n            let cmid = parm.searchParams.get('cmid');\n            if (!cmid) {\n                var firstHref = $('a[href*=\"question/bank/editquestion/question.php\"]').first().attr('href');\n                if (firstHref && firstHref.length > 0) {\n                    cmid = firstHref.match(/cmid=(\\d+)/)[1];\n                }\n            }\n            var userid = '';\n            var tableRow = $('table.generaltable.generalbox.quizreviewsummary tbody tr');\n            tableRow.each(function () {\n                var href = $(this).find('a[href*=\"/user/view.php\"]').attr('href');\n                if (href) {\n                    var id = href.match(/id=(\\d+)/);\n                    if (id) {\n                        userid = id[1];\n                    }\n                }\n            });\n\n            $('#page-mod-quiz-review .info').each(function () {\n\n                var editQuestionLink = $(this).find('.editquestion a[href*=\"question/bank/editquestion/question.php\"]');\n                if (editQuestionLink.length > 0) {\n                    var editQuestionLink = editQuestionLink.attr('href');\n                    var questionid = editQuestionLink.match(/&id=(\\d+)/)[1];\n                }\n\n                let args = { id: attempt_id, modulename: \"quiz\", \"cmid\": cmid, \"questionid\": questionid, \"userid\": userid };\n                let methodname = 'cursive_get_comment_link';\n                let com = AJAX.call([{ methodname, args }]);\n                com[0].done(function (json) {\n                    var data = JSON.parse(json);\n\n                    if (data.data.filename) {\n\n                        var content = $('.que.essay .editquestion a[href*=\"question/bank/editquestion/question.php\"][href*=\"&id=' + data.data.questionid + '\"]');\n                        if (data.usercomment != 'comments' && parseInt(showcomment)) {\n                            content.parent().parent().parent().find('.qtext').append('<div class=\"mb-2\">');\n                            var tt = '<h4>References</h4><div class = \"tiny_cursive-quiz-references rounded\" >';\n                            data.usercomment.forEach(element => {\n                                tt += '<div class = \"text-primary p-3\" style=\"border-bottom:1px solid rgba(0, 0, 0, 0.1)\">' + element.usercomment + '</div>';\n                            });\n\n                            content.parent().parent().parent().find('.qtext').append(tt + '</div></div>');\n                        }\n                        var filepath = '';\n                        if (data.data.filename) {\n                            filepath = data.data.filename;\n                        }\n                       \n                        let analytic_button_div = document.createElement('div');\n                        analytic_button_div.classList.add('text-center', 'mt-2');\n                        analytic_button_div.append(analyticButton(userid, questionid));\n                        content.parent().parent().parent().find('.qtext').append(analytic_button_div);\n\n                        let myEvents = new AnalyticEvents();\n                        var context = {\n                            tabledata: data.data,\n                            formattime: myEvents.formatedTime(data.data),\n                            page: score_setting,\n                            userid: userid,\n                            quizid: questionid,\n                        };\n       \n                        let authIcon = myEvents.authorshipStatus(data.data.first_file, data.data.score, score_setting);\n                        myEvents.createModal(userid, context, questionid, authIcon);\n                        myEvents.analytics(userid, templates, context, questionid, replayInstances, authIcon);\n                        myEvents.checkDiff(userid, data.data.file_id, questionid, replayInstances);\n                        myEvents.replyWriting(userid, filepath, questionid, replayInstances);\n\n                    }\n                });\n                return com.usercomment;\n            });\n        },\n    };\n    return usersTable;\n});\n"],"names":["define","$","AJAX","str","templates","Replay","analyticButton","AnalyticEvents","replayInstances","window","video_playback","mid","filepath","questionid","replay","elementId","filePath","speed","loop","controllerId","render","then","html","catch","e","console","error","usersTable","init","score_setting","showcomment","get_strings","key","component","done","appendSubmissionDetail","sub_url","location","href","parm","URL","attempt_id","searchParams","get","cmid","firstHref","first","attr","length","match","userid","each","this","find","id","editQuestionLink","args","modulename","com","call","methodname","json","data","JSON","parse","filename","content","usercomment","parseInt","parent","append","tt","forEach","element","analytic_button_div","document","createElement","classList","add","myEvents","context","tabledata","formattime","formatedTime","page","quizid","authIcon","authorshipStatus","first_file","score","createModal","analytics","checkDiff","file_id","replyWriting"],"mappings":"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"}