{"version":3,"file":"show_url_in_quiz_detail.min.js","sources":["../src/show_url_in_quiz_detail.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/show_url_in_quiz_detail\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\ndefine([\n    \"core/ajax\",\n    \"core/str\",\n    \"core/templates\",\n    \"./replay\",\n    \"./analytic_button\",\n    \"./analytic_events\"\n], function (\n    AJAX,\n    str,\n    templates,\n    Replay,\n    analyticButton,\n    AnalyticEvents\n) {\n    const replayInstances = {};\n\n    window.video_playback = function (mid, filepath, questionid) {\n        if (filepath !== '') {\n            const replay = new Replay(\n                elementId = 'content' + mid,\n                filePath = filepath,\n                speed = 10,\n                loop = false,\n                controllerId = 'player_' + mid + questionid\n            );\n            replayInstances[mid] = replay;\n        } else {\n            templates.render('tiny_cursive/no_submission').then(function (html) {\n                const contentElement = document.getElementById('content' + mid);\n                if (contentElement) {\n                    contentElement.innerHTML = html;\n                }\n            }).catch(function (e) {\n                console.error(e);\n            });\n        }\n        return false;\n    };\n\n    var usersTable = {\n        init: function (score_setting, showcomment) {\n            str.get_strings([{ key: \"field_require\", component: \"tiny_cursive\" }])\n                .done(function () {\n                    usersTable.appendSubmissionDetail(score_setting, showcomment);\n                });\n        },\n\n        appendSubmissionDetail: function (score_setting, showcomment) {\n            let sub_url = window.location.href;\n            let parm = new URL(sub_url);\n            let attempt_id = parm.searchParams.get('attempt');\n\n            let cmid = parm.searchParams.get('cmid');\n            if (!cmid) {\n                let firstHrefElement = document.querySelector('a[href*=\"question/bank/editquestion/question.php\"]');\n                if (firstHrefElement) {\n                    let firstHref = firstHrefElement.getAttribute('href');\n                    if (firstHref && firstHref.length > 0) {\n                        cmid = firstHref.match(/cmid=(\\d+)/)[1];\n                    }\n                }\n            }\n\n            let userid = '';\n            let tableRow = document.querySelectorAll('table.generaltable.generalbox.quizreviewsummary tbody tr');\n            tableRow.forEach(function (row) {\n                let hrefElement = row.querySelector('a[href*=\"/user/view.php\"]');\n                if (hrefElement) {\n                    let href = hrefElement.getAttribute('href');\n                    let id = href.match(/id=(\\d+)/);\n                    if (id) {\n                        userid = id[1];\n                    }\n                }\n            });\n\n            document.querySelectorAll('#page-mod-quiz-review .info').forEach(function (element) {\n                let editQuestionLink = element.querySelector('.editquestion a[href*=\"question/bank/editquestion/question.php\"]');\n                let questionid = null;\n                if (editQuestionLink) {\n                    let editQuestionHref = editQuestionLink.getAttribute('href');\n                    questionid = editQuestionHref.match(/&id=(\\d+)/)[1];\n                }\n\n                let args = { id: attempt_id, modulename: \"quiz\", cmid: cmid, questionid: questionid, userid: userid };\n                let methodname = 'cursive_get_comment_link';\n                let com = AJAX.call([{ methodname, args }]);\n\n                com[0].done(function (json) {\n                    let data = JSON.parse(json);\n\n                    if (data.data.filename) {\n                        let content = document.querySelector('.que.essay .editquestion a[href*=\"question/bank/editquestion/question.php\"][href*=\"&id=' + data.data.questionid + '\"]');\n                        if (content) {\n                            let qtextElement = content.parentNode.parentElement.nextSibling.querySelector('.qtext');\n\n                            if (data.usercomment !== 'comments' && parseInt(showcomment)) {\n                                if (qtextElement) {\n                                    let referencesDiv = document.createElement('div');\n                                    referencesDiv.classList.add('mb-2');\n                                    qtextElement.append(referencesDiv);\n\n                                    let tt = '<h4>References</h4><div class=\"tiny_cursive-quiz-references rounded\">';\n                                    data.usercomment.forEach(function (element) {\n                                        tt += '<div class=\"text-primary p-3\" style=\"border-bottom:1px solid rgba(0, 0, 0, 0.1)\">' + element.usercomment + '</div>';\n                                    });\n                                    qtextElement.innerHTML += tt + '</div></div>';\n                                }\n                            }\n\n                            let filepath = data.data.filename || '';\n                            let analytic_button_div = document.createElement('div');\n                            analytic_button_div.classList.add('text-center', 'mt-2');\n                            analytic_button_div.appendChild(analyticButton(userid, questionid));\n\n                            if (qtextElement) {\n                                qtextElement.appendChild(analytic_button_div);\n                            }\n\n                            let myEvents = new AnalyticEvents();\n                            let context = {\n                                tabledata: data.data,\n                                formattime: myEvents.formatedTime(data.data),\n                                page: score_setting,\n                                userid: userid,\n                                quizid: questionid,\n                            };\n                            let authIcon = myEvents.authorshipStatus(data.data.first_file, data.data.score, score_setting);\n\n                            myEvents.createModal(userid, context, questionid, authIcon);\n                            myEvents.analytics(userid, templates, context, questionid, replayInstances, authIcon);\n                            myEvents.checkDiff(userid, data.data.file_id, questionid, replayInstances);\n                            myEvents.replyWriting(userid, filepath, questionid, replayInstances);\n                            myEvents.quality(userid, templates, context, questionid, replayInstances, authIcon);\n                        }\n                    }\n                });\n                return com.usercomment;\n            });\n        },\n    };\n\n    return usersTable;\n});\n"],"names":["define","AJAX","str","templates","Replay","analyticButton","AnalyticEvents","replayInstances","window","video_playback","mid","filepath","questionid","replay","elementId","filePath","speed","loop","controllerId","render","then","html","contentElement","document","getElementById","innerHTML","catch","e","console","error","usersTable","init","score_setting","showcomment","get_strings","key","component","done","appendSubmissionDetail","sub_url","location","href","parm","URL","attempt_id","searchParams","get","cmid","firstHrefElement","querySelector","firstHref","getAttribute","length","match","userid","querySelectorAll","forEach","row","hrefElement","id","element","editQuestionLink","editQuestionHref","args","modulename","com","call","methodname","json","data","JSON","parse","filename","content","qtextElement","parentNode","parentElement","nextSibling","usercomment","parseInt","referencesDiv","createElement","classList","add","append","tt","analytic_button_div","appendChild","myEvents","context","tabledata","formattime","formatedTime","page","quizid","authIcon","authorshipStatus","first_file","score","createModal","analytics","checkDiff","file_id","replyWriting","quality"],"mappings":"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"}