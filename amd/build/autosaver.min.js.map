{"version":3,"file":"autosaver.min.js","sources":["../src/autosaver.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/autosaver\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\nimport { call } from 'core/ajax';\nimport { create } from 'core/modal_factory';\nimport { get_string as getString } from 'core/str';\nimport { save, cancel, hidden } from 'core/modal_events';\nimport jQuery from 'jquery';\n\nexport const register = (editor) => {\n    const postOne = (methodname, args) => call([{\n        methodname,\n        args,\n    }])[0];\n    var is_student = !(jQuery('#body').hasClass('teacher_admin'));\n    var intervention = jQuery('#body').hasClass('intervention');\n    const getModal = (e) => {\n        return create({\n            type: 'SAVE_CANCEL',\n            title: getString('tiny_cursive', 'tiny_cursive'),\n            body: '<textarea  class=\"form-control inputUrl\" value=\"\" id=\"inputUrl\" placeholder=\"sourceurl\"></textarea>',\n\n            removeOnClose: true,\n        })\n            .done(modal => {\n                modal.getRoot().append('<style>.close{ display: none ! important; }</style>');\n                modal.show();\n                var lastEvent = '';\n                modal.getRoot().on(save, function () {\n                    var number = document.getElementById(\"inputUrl\").value;\n                    if (number === \"\" || number === null || number === undefined) {\n                        editor.execCommand('Undo');\n                        alert(\"You cannot paste text without providing source\");\n                    } else {\n                       editor.execCommand('Paste');\n                    }\n                    let ur = e.srcElement.baseURI;\n                    let recourceId = 0;\n                    let parm = new URL(ur);\n                    let modulename = \"\";\n                    let editorid = editor?.id;\n                    let bodyid = jQuery('body').attr('class');\n                    let classes = bodyid.split(' ');\n                    let courseid = parseInt(classes.find((classname) => { return classname.startsWith('course-') }).split('-')[1]); // Getting cmid from body classlist.\n                    let cmid = parseInt(classes.find((classname) => { return classname.startsWith('cmid-') }).split('-')[1]); // Getting cmid from body classlist.\n\n\n                    if (ur.includes(\"attempt.php\") || ur.includes(\"forum\") || ur.includes(\"assign\")) { } else {\n                        return false;\n                    }\n\n                    if (!ur.includes(\"forum\") && !ur.includes(\"assign\")) {\n                        recourceId = parm.searchParams.get('attempt');\n                    }\n\n                    if (recourceId === null) {\n                        recourceId = 0;\n                    }\n                    if (ur.includes(\"forum\")) {\n                        modulename = \"forum\";\n                    }\n                    if (ur.includes(\"assign\")) {\n                        modulename = \"assign\";\n                    }\n                    if (ur.includes(\"attempt\")) {\n                        modulename = \"quiz\";\n                    }\n                    if (cmid === null) { cmid = 0; }\n\n                    \n\n\n                    postOne('cursive_user_comments', {\n                        modulename: modulename,\n                        cmid: cmid,\n                        resourceid: recourceId,\n                        courseid: courseid,\n                        usercomment: number,\n                        timemodified: \"1121232\",\n                        editorid: editorid ? editorid : \"\"\n                    });\n                    lastEvent = 'save';\n                    modal.destroy();\n                });\n                modal.getRoot().on(cancel, function () {\n                \n                    editor.execCommand('Undo');\n                    lastEvent = 'cancel';\n                });\n                modal.getRoot().on(hidden, function () {\n                    if (lastEvent != 'cancel' && lastEvent != 'save') { editor.execCommand('Undo'); }\n                });\n                return modal;\n            });\n    };\n    const sendKeyEvent = (event, ed) => {\n        let ur = ed.srcElement.baseURI;\n        let parm = new URL(ur);\n        let recourceId = 0;\n        let modulename = \"\";\n        let editorid = editor?.id;\n        let bodyid = jQuery('body').attr('class');\n        let classes = bodyid.split(' ');\n        let cmid = parseInt(classes.find((classname) => { return classname.startsWith('cmid-') }).split('-')[1]); // Getting cmid from body classlist.\n\n        if (ur.includes(\"attempt.php\") || ur.includes(\"forum\") || ur.includes(\"assign\")) { } else {\n            return false;\n        }\n        if (ur.includes(\"forum\") || ur.includes(\"assign\")) {\n\n        } else {\n\n            recourceId = parm.searchParams.get('attempt');\n        }\n        if (recourceId === null) {\n\n            recourceId = 0;\n        }\n\n        if (ur.includes(\"forum\")) {\n            modulename = \"forum\";\n        }\n        if (ur.includes(\"assign\")) {\n            modulename = \"assign\";\n        }\n        if (ur.includes(\"attempt\")) {\n            modulename = \"quiz\";\n        }\n\n        postOne('cursive_json', {\n            key: ed.key,\n            event: event,\n            keyCode: ed.keyCode,\n            resourceId: recourceId,\n            cmid: cmid,\n            modulename: modulename,\n            editorid: editorid ? editorid : \"\"\n        });\n    };\n    editor.on('keyUp', (editor) => {\n        sendKeyEvent(\"keyUp\", editor);\n    });\n    editor.on('Paste', async (e) => {\n        if (is_student && intervention) {\n            getModal(e);\n        }\n    });\n    editor.on('Redo', async (e) => {\n        if (is_student && intervention) {\n            getModal(e);\n        }\n    });\n    editor.on('keyDown', (editor) => {\n        sendKeyEvent(\"keyDown\", editor);\n    });\n    editor.on('init', () => {\n    });\n};\n"],"names":["obj","_jquery","__esModule","default","_exports","register","editor","postOne","methodname","args","call","is_student","jQuery","hasClass","intervention","getModal","e","create","type","title","getString","body","removeOnClose","done","modal","getRoot","append","show","lastEvent","on","save","number","document","getElementById","value","execCommand","alert","ur","srcElement","baseURI","recourceId","parm","URL","modulename","editorid","id","classes","attr","split","courseid","parseInt","find","classname","startsWith","cmid","includes","searchParams","get","resourceid","usercomment","timemodified","destroy","cancel","hidden","sendKeyEvent","event","ed","key","keyCode","resourceId","async"],"mappings":"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"}