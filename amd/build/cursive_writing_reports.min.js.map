{"version":3,"file":"cursive_writing_reports.min.js","sources":["../src/cursive_writing_reports.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/cursive_writing_reports\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\ndefine([\"core/ajax\", \"core/str\", \"core/templates\", \"./replay\", './analytic_button', \"./analytic_events\"], function (\n    AJAX,\n    str,\n    templates,\n    Replay,\n    analyticButton,\n    AnalyticEvents\n) {\n    const replayInstances = {};\n\n    window.video_playback = function (mid, filepath) {\n        if (filepath !== '') {\n            const replay = new Replay(\n                elementId = 'content' + mid,\n                filePath = filepath,\n                speed = 10,\n                loop = false,\n                controllerId = 'player_' + mid\n            );\n            replayInstances[mid] = replay;\n        } else {\n            templates.render('tiny_cursive/no_submission').then(html => {\n                document.getElementById('content' + mid).innerHTML = html;\n            }).catch(e => window.console.error(e));\n        }\n        return false;\n    };\n\n    var usersTable = {\n        init: function (page) {\n            str.get_strings([{ key: \"field_require\", component: \"tiny_cursive\" }])\n                .done(function () {\n                    document.addEventListener(\"DOMContentLoaded\", function () {\n                        // Placeholder for any action on document ready\n                    });\n                    usersTable.getusers(page);\n                });\n\n            let myEvents = new AnalyticEvents();\n            (async function () {\n                try {\n                    let score_setting = await str.get_string('confidence_threshold', 'tiny_cursive');\n                    analyticsEvents(score_setting);\n                } catch (error) {\n                    console.error('Error fetching string:', error);\n                }\n            })();\n\n            /**\n             * Handles the analytics events for each modal on the page.\n             *\n             * This function iterates over each element with the class `analytic-modal`,\n             * retrieves necessary data attributes, and makes an AJAX call to get writing\n             * statistics. Once the data is retrieved, it processes and displays it within\n             * the modal.\n             *\n             * @param {Object} score_setting - Configuration settings related to scoring.\n             */\n            function analyticsEvents(score_setting) {\n                const analyticModals = document.querySelectorAll(\".analytic-modal\");\n\n                analyticModals.forEach(modalElement => {\n                    var mid = modalElement.dataset.id;\n                    var filepath = modalElement.dataset.filepath;\n                    let context = {};\n                    context.userid = mid;\n                    let cmid = modalElement.dataset.cmid;\n                    let analyticBtn = analyticButton(mid);\n                    if (analyticBtn) {\n                        modalElement.innerHTML = '';\n                        modalElement.appendChild(analyticBtn);\n                    }\n\n\n                    AJAX.call([{\n                        methodname: 'cursive_get_writing_statistics',\n                        args: {\n                            cmid: cmid,\n                            fileid: mid,\n                        },\n                    }])[0].done(response => {\n                        let data = JSON.parse(response.data);\n\n                        context.formattime = myEvents.formatedTime(data);\n                        context.tabledata = data;\n                        let authIcon = myEvents.authorshipStatus(data.first_file, data.score, score_setting);\n                        myEvents.createModal(mid, context, '', authIcon);\n                        myEvents.analytics(mid, templates, context, '', replayInstances, authIcon);\n                        myEvents.checkDiff(mid, mid, '', replayInstances);\n                        myEvents.replyWriting(mid, filepath, '', replayInstances);\n                        myEvents.quality(userid, templates, context, '', replayInstances, authIcon);\n                    }).fail(error => {\n                        throw new Error('Error: ' + error.message);\n                    });\n\n                });\n            }\n        },\n\n        getusers: function (page) {\n            document.getElementById(\"id_coursename\").addEventListener('change', function () {\n                var courseid = this.value;\n\n                AJAX.call([{\n                    methodname: \"cursive_get_user_list\",\n                    args: {\n                        courseid: courseid,\n                    },\n                }])[0].done(function (json) {\n                    var data = JSON.parse(json);\n                    var context = {\n                        tabledata: data,\n                        page: page,\n                    };\n                    templates.render(\"tiny_cursive/user_list\", context)\n                        .then(function (html) {\n                            document.getElementById(\"id_username\").innerHTML = html;\n                        });\n                });\n\n                AJAX.call([{\n                    methodname: \"cursive_get_module_list\",\n                    args: {\n                        courseid: courseid,\n                    },\n                }])[0].done(function (json) {\n                    var data = JSON.parse(json);\n                    var context = {\n                        tabledata: data,\n                        page: page,\n                    };\n                    templates.render(\"tiny_cursive/module_list\", context)\n                        .then(function (html) {\n                            document.getElementById(\"id_modulename\").innerHTML = html;\n                        });\n                });\n            });\n        },\n    };\n\n    return usersTable;\n});\n"],"names":["define","AJAX","str","templates","Replay","analyticButton","AnalyticEvents","replayInstances","window","video_playback","mid","filepath","replay","elementId","filePath","speed","loop","controllerId","render","then","html","document","getElementById","innerHTML","catch","e","console","error","usersTable","init","page","get_strings","key","component","done","addEventListener","getusers","myEvents","score_setting","querySelectorAll","forEach","modalElement","dataset","id","context","userid","cmid","analyticBtn","appendChild","call","methodname","args","fileid","response","data","JSON","parse","formattime","formatedTime","tabledata","authIcon","authorshipStatus","first_file","score","createModal","analytics","checkDiff","replyWriting","quality","fail","Error","message","analyticsEvents","get_string","courseid","this","value","json"],"mappings":"AAsBAA,8CAAO,CAAC,YAAa,WAAY,iBAAkB,WAAY,oBAAqB,sBAAsB,SACtGC,KACAC,IACAC,UACAC,OACAC,eACAC,sBAEMC,gBAAkB,GAExBC,OAAOC,eAAiB,SAAUC,IAAKC,aAClB,KAAbA,SAAiB,OACXC,OAAS,IAAIR,OACfS,UAAY,UAAYH,IACxBI,SAAWH,SACXI,MAAQ,GACRC,MAAO,EACPC,aAAe,UAAYP,KAE/BH,gBAAgBG,KAAOE,YAEvBT,UAAUe,OAAO,8BAA8BC,MAAKC,OAChDC,SAASC,eAAe,UAAYZ,KAAKa,UAAYH,QACtDI,OAAMC,GAAKjB,OAAOkB,QAAQC,MAAMF,YAEhC,OAGPG,WAAa,CACbC,KAAM,SAAUC,MACZ5B,IAAI6B,YAAY,CAAC,CAAEC,IAAK,gBAAiBC,UAAW,kBAC/CC,MAAK,WACFb,SAASc,iBAAiB,oBAAoB,eAG9CP,WAAWQ,SAASN,aAGxBO,SAAW,IAAI/B,+CAoBMgC,eACEjB,SAASkB,iBAAiB,mBAElCC,SAAQC,mBACf/B,IAAM+B,aAAaC,QAAQC,GAC3BhC,SAAW8B,aAAaC,QAAQ/B,aAChCiC,QAAU,GACdA,QAAQC,OAASnC,QACboC,KAAOL,aAAaC,QAAQI,KAC5BC,YAAc1C,eAAeK,KAC7BqC,cACAN,aAAalB,UAAY,GACzBkB,aAAaO,YAAYD,cAI7B9C,KAAKgD,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CACFL,KAAMA,KACNM,OAAQ1C,QAEZ,GAAGwB,MAAKmB,eACJC,KAAOC,KAAKC,MAAMH,SAASC,MAE/BV,QAAQa,WAAapB,SAASqB,aAAaJ,MAC3CV,QAAQe,UAAYL,SAChBM,SAAWvB,SAASwB,iBAAiBP,KAAKQ,WAAYR,KAAKS,MAAOzB,eACtED,SAAS2B,YAAYtD,IAAKkC,QAAS,GAAIgB,UACvCvB,SAAS4B,UAAUvD,IAAKP,UAAWyC,QAAS,GAAIrC,gBAAiBqD,UACjEvB,SAAS6B,UAAUxD,IAAKA,IAAK,GAAIH,iBACjC8B,SAAS8B,aAAazD,IAAKC,SAAU,GAAIJ,iBACzC8B,SAAS+B,QAAQvB,OAAQ1C,UAAWyC,QAAS,GAAIrC,gBAAiBqD,aACnES,MAAK1C,cACE,IAAI2C,MAAM,UAAY3C,MAAM4C,eAlDtCC,OAD0BtE,IAAIuE,WAAW,uBAAwB,iBAEnE,MAAO9C,OACLD,QAAQC,MAAM,yBAA0BA,YAuDpDS,SAAU,SAAUN,MAChBT,SAASC,eAAe,iBAAiBa,iBAAiB,UAAU,eAC5DuC,SAAWC,KAAKC,MAEpB3E,KAAKgD,KAAK,CAAC,CACPC,WAAY,wBACZC,KAAM,CACFuB,SAAUA,aAEd,GAAGxC,MAAK,SAAU2C,UAEdjC,QAAU,CACVe,UAFOJ,KAAKC,MAAMqB,MAGlB/C,KAAMA,MAEV3B,UAAUe,OAAO,yBAA0B0B,SACtCzB,MAAK,SAAUC,MACZC,SAASC,eAAe,eAAeC,UAAYH,WAI/DnB,KAAKgD,KAAK,CAAC,CACPC,WAAY,0BACZC,KAAM,CACFuB,SAAUA,aAEd,GAAGxC,MAAK,SAAU2C,UAEdjC,QAAU,CACVe,UAFOJ,KAAKC,MAAMqB,MAGlB/C,KAAMA,MAEV3B,UAAUe,OAAO,2BAA4B0B,SACxCzB,MAAK,SAAUC,MACZC,SAASC,eAAe,iBAAiBC,UAAYH,uBAOtEQ"}