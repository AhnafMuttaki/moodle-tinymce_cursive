{"version":3,"file":"analytic_events.min.js","sources":["../src/analytic_events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module analytic_events\n *\n * @module     tiny_cursive/analytic_events\n * @copyright  2024 CTI <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport MyModal from \"./analytic_modal\";\nimport { call as getContent } from \"core/ajax\";\nimport * as Str from 'core/str';\nimport Chart from 'core/chartjs'\nexport default class AnalyticEvents {\n\n    createModal(userid, context, questionid = '', authIcon) {\n        const element = document.getElementById('analytics' + userid + questionid);\n\n        if (element) {\n            element.addEventListener('click', function (e) {\n                e.preventDefault();\n                // Create Moodle modal\n                MyModal.create({ templateContext: context }).then(modal => {\n                    const content = document.querySelector('#content' + userid + ' .table tbody tr:first-child td:nth-child(2)');\n                    if (content) content.innerHTML = authIcon;\n                    modal.show();\n                }).catch(error => {\n                    console.error(\"Failed to create modal:\", error);\n                });\n            });\n        }\n    }\n\n    analytics(userid, templates, context, questionid = '', replayInstances = null, authIcon) {\n        document.body.addEventListener('click', function (e) {\n            if (e.target && e.target.id === 'analytic' + userid + questionid) {\n                const repElement = document.getElementById('rep' + userid + questionid);\n                if (repElement) repElement.disabled = false;\n\n                e.preventDefault();\n\n                const content = document.getElementById('content' + userid);\n                if (content) {\n                    content.innerHTML = '';\n                    const loaderDiv = document.createElement('div');\n                    loaderDiv.className = 'd-flex justify-content-center my-5';\n                    const loader = document.createElement('div');\n                    loader.className = 'tiny_cursive-loader';\n                    loaderDiv.appendChild(loader);\n                    content.appendChild(loaderDiv);\n                }\n\n                if (replayInstances && replayInstances[userid]) {\n                    replayInstances[userid].stopReplay();\n                }\n\n                document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n                e.target.classList.add('active');\n\n                templates.render('tiny_cursive/analytics_table', context).then(function (html) {\n                    const content = document.getElementById('content' + userid);\n                    if (content) content.innerHTML = html;\n                    const firstCell = document.querySelector('#content' + userid + ' .table tbody tr:first-child td:nth-child(2)');\n                    if (firstCell) firstCell.innerHTML = authIcon;\n                }).catch(function (error) {\n                    console.error(\"Failed to render template:\", error);\n                });\n            }\n        });\n    }\n\n    checkDiff(userid, fileid, questionid = '', replayInstances = null) {\n        const nodata = document.createElement('p');\n        nodata.className = 'text-center p-5 bg-light rounded m-5 text-primary';\n        nodata.style.verticalAlign = 'middle';\n        nodata.style.textTransform = 'uppercase';\n        nodata.style.fontWeight = '500';\n        nodata.textContent = \"no data received yet\";\n\n        document.body.addEventListener('click', function (e) {\n            if (e.target && e.target.id === 'diff' + userid + questionid) {\n                const repElement = document.getElementById('rep' + userid + questionid);\n                if (repElement) repElement.disabled = false;\n\n                e.preventDefault();\n\n                const content = document.getElementById('content' + userid);\n                if (content) {\n                    content.innerHTML = '';\n                    const loaderDiv = document.createElement('div');\n                    loaderDiv.className = 'd-flex justify-content-center my-5';\n                    const loader = document.createElement('div');\n                    loader.className = 'tiny_cursive-loader';\n                    loaderDiv.appendChild(loader);\n                    content.appendChild(loaderDiv);\n                }\n\n                document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n                e.target.classList.add('active');\n\n                if (replayInstances && replayInstances[userid]) {\n                    replayInstances[userid].stopReplay();\n                }\n\n                if (!fileid) {\n                    const content = document.getElementById('content' + userid);\n                    if (content) content.innerHTML = nodata.outerHTML;\n                    throw new Error('Missing file id or Difference Content not received yet');\n                }\n\n                getContent([{\n                    methodname: 'cursive_get_writing_differences',\n                    args: { fileid: fileid },\n                }])[0].done(response => {\n                    let responsedata = JSON.parse(response.data);\n                    if (responsedata[0]) {\n                        let submitted_text = atob(responsedata[0].submitted_text);\n\n                        // Fetch the dynamic strings\n                        Str.get_strings([\n                            { key: 'original_text', component: 'tiny_cursive' },\n                            { key: 'editspastesai', component: 'tiny_cursive' }\n                        ]).done(strings => {\n                            const originalTextString = strings[0];\n                            const editsPastesAIString = strings[1];\n\n                            const legend = document.createElement('div');\n                            legend.className = 'd-flex p-2 border rounded mb-2';\n\n                            // Create the first legend item\n                            const attributedItem = document.createElement('div');\n                            attributedItem.className = 'tiny_cursive-legend-item';\n                            const attributedBox = document.createElement('div');\n                            attributedBox.className = 'tiny_cursive-box attributed';\n                            const attributedText = document.createElement('span');\n                            attributedText.textContent = originalTextString;\n                            attributedItem.appendChild(attributedBox);\n                            attributedItem.appendChild(attributedText);\n\n                            // Create the second legend item\n                            const unattributedItem = document.createElement('div');\n                            unattributedItem.className = 'tiny_cursive-legend-item';\n                            const unattributedBox = document.createElement('div');\n                            unattributedBox.className = 'tiny_cursive-box tiny_cursive_added';\n                            const unattributedText = document.createElement('span');\n                            unattributedText.textContent = editsPastesAIString;\n                            unattributedItem.appendChild(unattributedBox);\n                            unattributedItem.appendChild(unattributedText);\n\n                            // Append the legend items to the legend container\n                            legend.appendChild(attributedItem);\n                            legend.appendChild(unattributedItem);\n\n                            let contents = document.createElement('div');\n                            contents.className = 'tiny_cursive-comparison-content';\n                            let textBlock2 = document.createElement('div');\n                            textBlock2.className = 'tiny_cursive-text-block';\n                            textBlock2.innerHTML = `<div id=\"tiny_cursive-reconstructed_text\">${JSON.parse(submitted_text)}</div>`;\n\n                            contents.appendChild(legend);\n                            contents.appendChild(textBlock2);\n\n                            const content = document.getElementById('content' + userid);\n                            if (content) content.innerHTML = contents.outerHTML;\n                        }).catch(error => {\n                            console.error(\"Failed to load language strings:\", error);\n                            const content = document.getElementById('content' + userid);\n                            if (content) content.innerHTML = nodata.outerHTML;\n                        });\n                    } else {\n                        const content = document.getElementById('content' + userid);\n                        if (content) content.innerHTML = nodata.outerHTML;\n                    }\n                }).catch(error => {\n                    const content = document.getElementById('content' + userid);\n                    if (content) content.innerHTML = nodata.outerHTML;\n                    throw new Error('Error loading JSON file: ' + error.message);\n                });\n            }\n        });\n    }\n\n    replyWriting(userid, filepath, questionid = '', replayInstances = null) {\n        document.body.addEventListener('click', function (e) {\n            if (e.target && e.target.id === 'rep' + userid + questionid) {\n                e.target.disabled = true;\n                e.preventDefault();\n\n                const content = document.getElementById('content' + userid);\n                if (content) {\n                    content.innerHTML = '';\n                    const loaderDiv = document.createElement('div');\n                    loaderDiv.className = 'd-flex justify-content-center my-5';\n                    const loader = document.createElement('div');\n                    loader.className = 'tiny_cursive-loader';\n                    loaderDiv.appendChild(loader);\n                    content.appendChild(loaderDiv);\n                }\n\n                document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n                e.target.classList.add('active');\n\n                if (replayInstances && replayInstances[userid]) {\n                    replayInstances[userid].stopReplay();\n                }\n\n                if (questionid) {\n                    video_playback(userid, filepath, questionid);\n                } else {\n                    video_playback(userid, filepath);\n                }\n            }\n        });\n    }\n\n    quality(userid, templates, context, questionid = '', replayInstances = null, authIcon) {\n        document.body.addEventListener('click', function (e) {\n            if (e.target && e.target.id === 'quality' + userid + questionid) {\n                const repElement = document.getElementById('rep' + userid + questionid);\n                if (repElement) repElement.disabled = false;\n                e.preventDefault();\n\n                const content = document.getElementById('content' + userid);\n                if (content) {\n                    content.innerHTML = '';\n                    const loaderDiv = document.createElement('div');\n                    loaderDiv.className = 'd-flex justify-content-center my-5';\n                    const loader = document.createElement('div');\n                    loader.className = 'tiny_cursive-loader';\n                    loaderDiv.appendChild(loader);\n                    content.appendChild(loaderDiv);\n                }\n\n                if (replayInstances && replayInstances[userid]) {\n                    replayInstances[userid].stopReplay();\n                }\n\n                templates.render('tiny_cursive/quality_cart', context).then(function (html) {\n                    const content = document.getElementById('content' + userid);\n                    if (content) content.innerHTML = html;\n\n                    let chartvas = document.querySelector('#chart' + userid);\n                    const data = {\n                        labels: [\n                            'Average Word Length',\n                            'Edits',\n                            'P-burst Count',\n                            'P-burst Mean',\n                            'Q Count',\n                            'Sentence Count',\n                            'Total Active Time',\n                            'Verbosity',\n                            'Word Count',\n                            'Word Count per Sentence Mean'\n                        ],\n                        datasets: [{\n                            data: [25, 25, 25, -12, 45, 15, 100, 23, 23, -23],\n                            backgroundColor: function (context) {\n                                // Apply green or gray depending on value\n                                const value = context.raw;\n                                if (value > 0 && value < 100) {\n                                    return '#43BB97';\n                                } else if (value < 0) {\n                                    return '#AAAAAA';\n                                } else {\n                                    return '#00432F'; // Green for positive, gray for negative\n                                }\n\n                            },\n                        }]\n                    };\n                    const chartAreaBg = {\n                        id: 'chartAreaBg',\n                        beforeDraw: (chart) => {\n                            const { ctx, scales: { x, y } } = chart;\n                            ctx.save();\n                    \n                            const segmentPixel = y.getPixelForValue(y.ticks[0].value) - y.getPixelForValue(y.ticks[1].value);\n                            const doubleSegment = y.ticks[2].value - y.ticks[0].value;\n                            let tickArray = [];\n                    \n                            // Generate tick values\n                            for (let i = 0; i <= y.max; i += doubleSegment) {\n                                if (i !== y.max) {\n                                    tickArray.push(i);\n                                }\n                            }\n                    \n                            // Draw the background rectangles for each tick\n                            tickArray.forEach(tick => {\n                                ctx.fillStyle = 'rgba(0, 0, 0, 0.02)';\n                                ctx.fillRect(0, y.getPixelForValue(tick) + 52, x.width + x.width + 21, segmentPixel);\n                            });\n                    \n                            // Draw labels and values\n                            const dataset = chart.data.datasets[0];\n                            const labelOffset = 5; // Offset for positioning\n                    \n                            // Loop through each tick to draw the text\n                            // y.ticks.forEach((tick, index) => {\n                            //     // console.log(Object.getPrototypeOf(tick.$context.tick.$context).scale);\n                            //     const value = dataset.data[index]; // Get the value for the current label\n                            //     const xPosition = x.left; // X position for the text\n                            //     const yPosition = y.getPixelForTick(index); // Y position for the tick\n\n                            //     ctx.fillStyle = 'red'; // Set color to match the bar\n                            //     ctx.fillText(`${value}%`, xPosition, yPosition+7); // Draw the colored value\n                            // });\n\n                            // ctx.restore();\n                        }\n                    };\n\n                    new Chart(chartvas, {\n                        type: 'bar',\n                        data: data,\n                        options: {\n                            indexAxis: 'y',\n                            elements: {\n                                bar: {\n                                    borderRadius: 16,\n                                    borderWidth: 0,\n                                }\n                            },\n                            responsive: true,\n                            scales: {\n                                x: {\n                                    beginAtZero: true,\n                                    min: -100,\n                                    max: 100,\n                                    ticks: {\n                                        callback: function (value) {\n                                            if (value === -100 || value === 100) {\n                                                return value + '%';\n                                            } else if (value === 0) {\n                                                return 'Average';\n                                            }\n                                            return '';\n                                        },\n                                        display: true,\n                                        font: function (context) {\n                                            if (context && context.tick && context.tick.value === 0) {\n                                                return {\n                                                    weight: 'bold',\n                                                    size: 14,\n                                                    color: 'black'\n                                                };\n                                            }\n                                            return {\n                                                style: 'semi-bold', \n                                                size: 13, \n                                                color: 'black'\n                                            };\n                                        },\n\n                                    },\n                                    grid: {\n                                        display: true,\n                                        color: function (context) {\n                                            return context.tick.value === 0 ? 'black' : '#eaeaea';\n                                        },\n                                        lineWidth: function (context) {\n                                            return context.tick.value === 0 ? 2 : 1; // Thicker line for 0 range\n                                        },\n                                        tickLength: 0,\n                                    },\n                                    position: 'top'\n\n                                },\n                                y: {\n                                    beginAtZero: true,\n                                    ticks: {\n                                        // callback: function (value, index, ticks) {\n                                        //     return `${data.labels[index]} ${data.datasets[0].data[index]}%`; // Format the label\n                                        // },\n                                        display: true,\n                                        align: 'center',\n\n                                        crossAlign: 'far',\n                                        font: {\n                                            size: 18,\n                                        },\n                                        tickLength: 100,\n                                        color: 'black',\n                                    },\n                                    grid: {\n                                        display: true,\n                                        tickLength: 1000,\n                                    },\n                                    \n                                }\n                            },\n                            plugins: {\n                                legend: {\n                                    display: false,\n                                },\n                                title: {\n                                    display: false,\n                                },\n                            }\n                        },\n                        plugins: [chartAreaBg]\n                    });\n\n                }).catch(function (error) {\n                    console.error(\"Failed to render template:\", error);\n                });\n\n                document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n                e.target.classList.add('active');\n\n                // templates.render('tiny_cursive/quality_cart', context).then(function (html) {\n                //     const content = document.getElementById('content' + userid);\n                //     if (content) content.innerHTML = html;\n\n\n\n                // }).catch(function (error) {\n                //     console.error(\"Failed to render template:\", error);\n                // });\n            }\n        });\n    }\n\n    formatedTime(data) {\n        if (data.total_time_seconds) {\n            let total_time_seconds = data.total_time_seconds;\n            let hours = Math.floor(total_time_seconds / 3600).toString().padStart(2, 0);\n            let minutes = Math.floor((total_time_seconds % 3600) / 60).toString().padStart(2, 0);\n            let seconds = (total_time_seconds % 60).toString().padStart(2, 0);\n            return `${hours}h ${minutes}m ${seconds}s`;\n        } else {\n            return \"0h 0m 0s\";\n        }\n    }\n\n    authorshipStatus(firstFile, score, score_setting) {\n        var icon = 'fa fa-circle-o';\n        var color = 'font-size:32px;color:black';\n        var score = parseFloat(score);\n\n        if (firstFile) {\n            icon = 'fa fa-solid fa-info-circle';\n            color = 'font-size:32px;color:#000000';\n        } else if (score >= score_setting) {\n            icon = 'fa fa-check-circle';\n            color = 'font-size:32px;color:green';\n        } else if (score < score_setting) {\n            icon = 'fa fa-question-circle';\n            color = 'font-size:32px;color:#A9A9A9';\n        }\n\n        const iconElement = document.createElement('i');\n        iconElement.className = icon;\n        iconElement.style = color;\n        return iconElement;\n    }\n}\n"],"names":["createModal","userid","context","questionid","authIcon","element","document","getElementById","addEventListener","e","preventDefault","create","templateContext","then","modal","content","querySelector","innerHTML","show","catch","error","console","analytics","templates","replayInstances","body","target","id","repElement","disabled","loaderDiv","createElement","className","loader","appendChild","stopReplay","querySelectorAll","forEach","el","classList","remove","add","render","html","firstCell","checkDiff","fileid","nodata","style","verticalAlign","textTransform","fontWeight","textContent","outerHTML","Error","methodname","args","done","response","responsedata","JSON","parse","data","submitted_text","atob","Str","get_strings","key","component","strings","originalTextString","editsPastesAIString","legend","attributedItem","attributedBox","attributedText","unattributedItem","unattributedBox","unattributedText","contents","textBlock2","message","replyWriting","filepath","video_playback","quality","chartvas","Chart","type","labels","datasets","backgroundColor","value","raw","options","indexAxis","elements","bar","borderRadius","borderWidth","responsive","scales","x","beginAtZero","min","max","ticks","callback","display","font","tick","weight","size","color","grid","lineWidth","tickLength","position","y","align","crossAlign","plugins","title","beforeDraw","chart","ctx","save","segmentPixel","getPixelForValue","doubleSegment","tickArray","i","push","fillStyle","fillRect","width","formatedTime","total_time_seconds","hours","Math","floor","toString","padStart","minutes","seconds","authorshipStatus","firstFile","score","score_setting","icon","parseFloat","iconElement"],"mappings":"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"}