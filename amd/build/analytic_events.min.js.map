{"version":3,"file":"analytic_events.min.js","sources":["../src/analytic_events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module analytic_events\n *\n * @module     tiny_cursive/analytic_events\n * @copyright  2024 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport MyModal from \"./analytic_modal\";\nimport { call as getContent } from \"core/ajax\";\nexport default class AnalyticEvents {\n\n    createModal(userid, context, questionid = '') {\n        $('#analytics' + userid + questionid).on('click', function (e) {\n            e.preventDefault();\n\n            // Create Moodle modal\n            MyModal.create({ templateContext: context }).then(modal => {\n                modal.show();\n            }).catch(error => {\n                console.error(\"Failed to create modal:\", error);\n            });\n\n        });\n    }\n\n    analytics(userid, templates, context, questionid = '') {\n        $('body').on('click', '#analytic' + userid + questionid, function (e) {\n            e.preventDefault();\n            $('.active').removeClass('active');\n            $(this).addClass('active'); // Add 'active' class to the clicked element\n\n            templates.render('tiny_cursive/analytics_table', context).then(function (html) {\n                $('#content' + userid).html(html);\n\n            }).fail(function (error) {\n                console.error(\"Failed to render template:\", error);\n            });\n        });\n    }\n\n    checkDiff(userid, fileid, questionid = '', content = \"diff\") {\n        // Event handler for '#diff' + userid\n        const nodata = document.createElement('p');\n        nodata.classList.add('text-center', 'p-5', 'bg-light', 'rounded', 'm-5', 'text-primary');\n        nodata.style.verticalAlign = 'middle';\n        nodata.style.textTransform = 'uppercase';\n        nodata.style.fontWeight = '500';\n        nodata.textContent = \"no data received yet\";\n\n        $('body').on('click', '#diff' + userid + questionid, function (e) {\n            e.preventDefault();\n            $('.active').removeClass('active');\n            $(this).addClass('active'); // Add 'active' class to the clicked element\n            if (!fileid) {\n                $('#content' + userid).html(nodata);\n                throw new Error('Missing file id or Difference Content not receive yet');\n            }\n            getContent([{\n                methodname: 'cursive_get_writing_differences',\n                args: {\n                    fileid: fileid,\n                },\n            }])[0].done(response => {\n                let responsedata = JSON.parse(response.data);\n                if (responsedata[0]) {\n\n                    let submitted_text = atob(responsedata[0].submitted_text);\n                    let reconstructed_text = responsedata[0].reconstructed_text;\n                    const $legend = $('<div class= \"d-flex p-2 border rounded  mb-2\">');\n\n                    // Create the first legend item\n                    const $attributedItem = $('<div>', { class: 'cursive-legend-item' });\n                    const $attributedBox = $('<div>', { class: 'cursive-box attributed' });\n                    const $attributedText = $('<span>').text('Attributed');\n                    $attributedItem.append($attributedBox).append($attributedText);\n\n                    // Create the second legend item\n                    const $unattributedItem = $('<div>', { class: 'cursive-legend-item' });\n                    const $unattributedBox = $('<div>', { class: 'cursive-box tiny_cursive_added' });\n                    const $unattributedText = $('<span>').text('Unattributed');\n                    $unattributedItem.append($unattributedBox).append($unattributedText);\n\n                    // Append the legend items to the legend container\n                    $legend.append($attributedItem).append($unattributedItem);\n\n                    let contents = $('<div>').addClass('cursive-comparison-content');\n\n                    let textBlock2 = $('<div>').addClass('cursive-text-block').append(\n                        $('<div>').attr('id', 'cursive-reconstructed_text').html(JSON.parse(submitted_text))\n                    );\n\n                    contents.append($legend, textBlock2);\n\n                    content = contents;\n                    $('#content' + userid).html(content); // Update content\n                } else {\n                    $('#content' + userid).html(nodata)\n                }\n\n            }).fail(error => { $('#content' + userid).html(nodata); throw new Error('Error loading JSON file: ' + error.message); });\n\n\n        });\n    }\n\n    replyWriting(userid, filepath, questionid = '') {\n        // Event handler for '#rep' + userid\n        $('body').on('click', '#rep' + userid + questionid, function (e) {\n            e.preventDefault();\n            $('.active').removeClass('active');\n            $(this).addClass('active'); // Add 'active' class to the clicked element\n            video_playback(userid, filepath);\n\n        });\n    }\n\n    formatedTime(data) {\n        // Calculate and format total time\n        if (data.total_time_seconds) {\n            let total_time_seconds = data.total_time_seconds;\n            let hours = Math.floor(total_time_seconds / 3600).toString().padStart(2, 0);\n            let minutes = Math.floor((total_time_seconds % 3600) / 60).toString().padStart(2, 0);\n            let seconds = (total_time_seconds % 60).toString().padStart(2, 0);\n            let formattedTime = `${hours}h ${minutes}m ${seconds}s`;\n            return formattedTime\n        } else {\n            return \"0h 0m 0s\"\n        }\n    }\n}"],"names":["createModal","userid","context","$","on","e","preventDefault","create","templateContext","then","modal","show","catch","error","console","analytics","templates","questionid","removeClass","this","addClass","render","html","fail","checkDiff","fileid","content","nodata","document","createElement","classList","add","style","verticalAlign","textTransform","fontWeight","textContent","Error","methodname","args","done","response","responsedata","JSON","parse","data","submitted_text","atob","reconstructed_text","$legend","$attributedItem","class","$attributedBox","$attributedText","text","append","$unattributedItem","$unattributedBox","$unattributedText","contents","textBlock2","attr","message","replyWriting","filepath","video_playback","formatedTime","total_time_seconds","hours","Math","floor","toString","padStart","minutes","seconds"],"mappings":"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"}